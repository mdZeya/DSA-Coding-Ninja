Merge Sort Code
Send Feedback
Sort an array A using Merge Sort.
Change in the input array itself. So no need to return or print anything.
Input format :
Line 1 : Integer n i.e. Array size
Line 2 : Array elements (separated by space)
Output format :
Array elements in increasing order (separated by space)
Constraints :
1 <= n <= 10^3
Sample Input 1 :
6 
2 6 8 5 4 3
Sample Output 1 :
2 3 4 5 6 8
Sample Input 2 :
5
2 1 5 2 3
Sample Output 2 :
1 2 2 3 5 


Main Code...........................................................................................!

import java.util.Scanner;

public class runner {
	public static int[] takeInput() {
		Scanner s = new Scanner(System.in);
		int size = s.nextInt();
		int arr[] = new int[size];
		for (int i = 0; i < size; i++) {
			arr[i] = s.nextInt();
		}
		return arr;
	}
	
	public static void printArray(int input[]) {
		for(int i = 0; i < input.length; i++) {
			System.out.print(input[i] + " ");
		}
	}
	
	public static void main(String[] args) {
		int[] input = takeInput();
		solution.mergeSort(input);
		printArray(input);
	}
}


Class Code..............................................................................................!

public class solution {
    public static void mergeSort(int[] input){
        int si =0;
        int ei = input.length-1;
		// Write your code here
		merge(input,si,ei);
		
	}
    	public static void merge(int[] input , int si, int ei)
	{
		if(si>=ei)
		{
			return ;
		}
		
		int middle= (si+ei)/2;
		merge(input,si,middle);
		merge(input,middle+1,ei);
		mergearr(input,si,ei);
		
		
		
	}
	public static void mergearr(int input[],int si, int ei)
	{
		int mid = (si+ei)/2;
		int arr[]=new int[ei-si+1];
		int i =si;
		int j=mid+1;
		int k=0;
		
		while(i <= mid && j<=ei)
		{
			if(input[i]<=input[j])
			{
				arr[k]=input[i];
				i++;
				k++;
				
			}
			else
			{
				arr[k]=input[j];
				k++;
				j++;
			}
		}
		while(i<=mid)
		{
			arr[k]= input[i];
			i++;
			k++;
			
		}
		while(j<=ei)
		{
			arr [k] = input[j];
			k++;
			j++;
		}
		
		for(int index =0;index<arr.length;index++)
		{
			input[si+index]=arr[index];
		}
	
	}

	
}
