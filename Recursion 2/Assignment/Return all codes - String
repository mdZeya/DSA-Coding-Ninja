Return all codes - String
Send Feedback
Assume that the value of a = 1, b = 2, c = 3, ... , z = 26. You are given a numeric string S. Write a program to return the list of all possible codes that can be generated from the given string.
Note : The order of codes are not important. And input string does not contain 0s.
Input format :
A numeric string
Constraints :
1 <= Length of String S <= 10
Sample Input:
1123
Sample Output:
aabc
kbc
alc
aaw
kw

Main code...............................................................................!

import java.util.Scanner;

public class runner {
	
	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		String input = s.next();
		String output[] = solution.getCode(input);
		for(int i = 0; i < output.length; i++) {
			System.out.println(output[i]);
		}
	}
}


CLASS CODE.............................................................................!

public class solution {

	// Return a string array that contains all possible codes
	public static  String[] getCode(String input){
		// Write your code here
		if(input.length()==0){
            String[] ans=new String[1];
            ans[0] ="";
            return ans;
        }
        int first = input.charAt(0) -'0';
        String[] smallAns = getCode(input.substring(1));
        String[] smallAns1 = new String[0];
        int first1 = 0;
        if(input.length()> 1){
            first = (input.charAt(0)-'0')*10 + input.charAt(1)-'0';
        }
        if(input.length() < 27){
            smallAns1 = getCode(input.substring(2));
        }
        char f = (char)(first +96);
        char f1 = (char)(first1 + 96);
        String[] ans=new String[smallAns.length + smallAns1.length];
        int k=0;
        for(int i=0; i<smallAns.length; i++);{
           // ans[k] = f + smallAns[i];
             ans[k] = f+smallAns[i];
            k++;
        }
        for(int i=0; i<smallAns1.length; i++){
            ans[k] = f1+smallAns1[i];
            k++;
        }
        return ans;
        }
	}


